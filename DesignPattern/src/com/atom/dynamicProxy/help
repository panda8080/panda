1. java.lang.reflect.Proxy类:
作用:动态生成代理类和对象
每次通过代理类生成代理对象时都要指定对应的处理器对象
public static Object newProxyInstance(ClassLoader loader,Class<?>[] interfaces,InvocationHandler h);

2. java.lang.reflect.InvocationHandler(处理器接口)
可以通过invoke方法实现对真实主体的代理访问
public Object invoke(Object obj, Method method, Object[] args)
obj: 被代理真实主体对象
method:要调用的方法
args:方法调用时所需参数

